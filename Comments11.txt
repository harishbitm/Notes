Thilak@123 :- fed
harishbitm@gmail.com
harishkeerthe1234 
Harish@1234 :- AWS pasword

harishbitm@gmail.com  :- github
Harish@341

harishbitm@outlook.com
2552489Hk@

harishbitm          :- docker hub
Harish@1234

Nevergiveup#1
8867238169Hk

REPORTING MANAGER
NAME  : Dawan Kulakarni
DESIGNATION : REPORTING MANAGER

HR MANAGER
NAME :  MS RAJU
DESIGNATION: HR MANAGER

https://github.com/geerlingguy/ansible-for-devops


      GIT 
	  
	git tutorials https://youtu.be/vMdSqMf6BPY   
                  https://www.youtube.com/playlist?list=PL_euSNU_eLbegnt7aR8I1gXfLhKZbxnYX
1-ls (listing files and directory) 
2-git add filename (git add. , git add *) 
3-git status
4-git commit -m "message 01" 
5-git remote add origin URL
6-git push -u origin master
      (-u option allows us to set upstream of the branch we are pushing so that it will create a link between local branch to a branch in 
        a github, after creating a link for next push you can use command "git push" )
		
      https://youtu.be/csHeaYWspic

* ls :- listing both file & directory 

  
  vi editor details :- https://www.tutorialspoint.com/unix/unix-vi-editor.htm


To add user name :- git config --globle user.email "@gmail.com"
To add user name :- git config --globle user.name "Harish"
To remove user name :- git config --global --unset user.name
To remove URL :- git remote rm origin 
To creat file :- touch file name

  *** proceger ***
01-ls
02-git inti
03-git add file name 
04-git status
05-git commit -m "hello"
06-git remote add origin url
07-git push -u origin master

how to remove old URL 
git remote -v :- list origin url 
git remote rm origin 

* git clone url :- to download code

how to give access to the user for preticular repository
 settings --- manage access ---- invate a colabarater

how to change public to private 
settings --- visability of rpositorys 

**diff b/w reset, revert and checkout commands
     
	reset =    "git reset --hard head~1" (head~1 or commit_id)
    revert =  "git revert commit_id"
	
    reset will remove the commits  
    revert will undo the chnages in the file but it will not delete the commit_id, it will create a new commit_id

    where to use reset, revert and checkout 
	rest is used when comments are in local 
    rest is used when we want to undo the changes of file which is not pushed into the remote (present in local repository)
    revert is used when we want undo the changes of file which is in remote 
	checkout is used when we want to undo the changes to the tracked file which is in working area (this cmd is not applicable for untacked file)

    diff b/w git reset --hard commit_id & git reset --soft commit_id 

    --hard :- it will reset the commit and also it will remove files in the working area and staging area and not remove untracked files 
	--soft :- it will reset the commit and keeps the files in staging area 
	
01- git reset --soft HEAD~1         :- to get back data from local to stageing area 
02- git reset --hard HEAD~1         :- it will remove commit and also remove files in staging and working area  
03- git reset --mixed comm_id       :- it will move file from remote to working area (git reset HEAD~1)
04- git reset HEAD filename         :- To get back data from stageing area to working area (git restore --staged filename)


01. git revert <commit_hash>

    https://stackoverflow.com/questions/22682870/how-can-i-undo-pushed-commits-using-git
	
   git rebase, folking https://www.youtube.com/watch?v=xje_4h9fTK4&list=WL&index=1

git pull origin master --allow-unrelated-histories   :- if u want to pull  data from deferent repository 
 
  ***To view data in repocetery***
git log --oneline 10
git log --auther=name 
git log --since=yy-mm-dd --untill=yy-mm-dd

  *** STASH ***
  Stash is a temprovary memory which is used to store the data which is present in the stageing area  
01.git stash save " message "
02.git stash list     -- it will show message 
03.git stash show ID  -- to show file name
04.git stash apply    -- it will get latest file from stash memory to staging memory 
05.git stash apply stash@{2}  -- to get perticular file
06.git stash pop      -- to cut file in stash memory and past in staging area
07.git stash drop     -- TO delete file in stash memory
08.git stash drop ID  -- to delete perticual file in stash memory 

     defference b/w apply, pop & drop 
	   apply = copy from stash to stageing
	   pop   = cut and past from stash to stageing
	   drop  = delete in stash 

  ***BRANCH ***
01.git branch BranchNAME          ---To creat branch 
   git branch               ---it will list all branch 
02.git checkout NAME ---To enter into branch  
03.git merge branch.name    --- to merge branch data ( )
04.git branch -r            --remote branch
05.git checkout -b master1  -- to creat branch and enter into branch 
06.git branch -d master     -- delete
07.git diff 2nd-branchname  -- it will show the code defference between existing branch and perticular branch

 git tag          :-to view all tags 

     PROCEDURE FOR BRANCHING 
	 1.create new branch
	 2.switch to new branch
	 3.make changes
	 4.commit changes
	 5.merge main branch to the current branch
	 6.fix if there are any conflicts
	 7.push the changes
	 
	 
Branching strategies
  1. Trunk based strategies :- it will be having single branch called main branch 
  2. feature branch         :- in feature branching strategie there will be a main branch, from the main branch devloper is going to 
	                           pull the code & devlopes the feature branch after that he is going to merge with main branch, this strategie
						       is used when there is requirment to devlop the code or prodect with in short term 
  3. Realese branch         :-
  4. git flow               :- there will be a main branch from main branch there will be a devlopment branch and from that devlopment branch 
	                           there will be defferent branchs like relese branch 1, 2 and feature branch 1, 2
  5. enveronment branch     :- there will be a main branch --> devlopment branch --> stageing --> test --> prodection branch from there we 
	                           are going to mearge to main branch (not recomended in interview) 
								  
	  git branch 3ndBranch-name 2ndbranch-name	(by using this command 3drbranch is created from 2nd branch)	
	  
	  https://www.youtube.com/watch?v=fCNX8yLcw2Q  :- branching

*****diff b/w git clone & pull & fetch*****

git clone :- it is used to download entair repository
git fetch :- it will dowmload latest modifed file from central repository and store that data into the remote origin master not into the local repository   
git pull  :- it is used to get perticularly latest modified file from the central repository to local repository(fetch + merge)
git merge :- it is used to merge remote origin master data into the local repository	  

  *** Edeting file in linux ***
cd folder name      --To enetr into subfolder 
cd ..               --To come back to main folder
touch file name     --To creat file
vi file name        --to edit data in file --> I  --> ESC --> :WQ (SAVE DATA & EXIT) OR :Q! (WITHOUT SAVE & EXIT ) (
                      vi /nano/ vim = editor) or  :q! (if it is read only then comeout with out saving)
cat file name          --to view data in linux tab
git tag name commit ID -- to create tag
git tag                -- to list tags
git push origin tag name  -- to push tags into repository

   svn to git migration procedure 
   https://www.atlassian.com/git/tutorials/migrating-overview

    Prepare your environment for the migration.
    Convert the SVN repository to a local Git repository.
    Synchronize the local Git repository when the SVN repository changes.
    Share the Git repository with your developers via Bitbucket.
    Migrate your development efforts from SVN to Git.

   DBS task 
   
   $ git remote add origin /var/save/my-repo/.git/ :- to make local-repo as remote (got remote -v)
   $ git push master --force --no-verify           :- to ignore master --force push to remote
     git init --bare
     git config --global user.email "hackerrank"
     git config --global user.name "hacker"
     git add .
     git commit -m 'my first commit'
     git remote add origin /var/save/my-repo/.git
     git push -u origin master --force



             ****linux*****
01.mkdir folder name  --To creat directry (folder)
02.df -h              ---To find space avilable
03.pwd                 -- To find path(present working directory)
04.ls -l      ---To find longlist of directory
05.ls -la     ---To find hidenfiles of directory
06.ls -lt     ---long list withtime
07.ls -ltr    --- long list withtime reverse
08.history    --- To find comments excuted previusly
09.rm filename   --- To delete file
10.rm -rf directory name ---To delete directory (rf-recarcivly and forcefully)
11.cd /      ----It will show configurations file 
12.sudo su  --- To switch to root user
13.exit    --- To come bake to normal user
14.sudo touch filename ---  To creat file in opt folder
15.sudo vi filename   ---  To edit file (after editing file press ESC and :wq to exit from file by saving data)
Note :- To creat files rather then home folder 1. we need to switch to root user, comment to switch to root user " sudo su ". 
                                               2. sudo touch filename or mkdir directory name
16.sudo chown -R ec2user:ec2user tomcat8   :- to change ownership of any file											   
											   
15.sudo wget link   --- To download pakages (wget-it download pakages present in web to server)tar file need to dwonload for linux
               (Linux-04 video)
16.SUDO CP SOURCE DESTINATION ----   (SUDO CP /OPT/CODE/HOME) copy files
17.SUDO MV SOURCE DESTINATION  ---   (SUDO MV /OPT/DEVOPS/HOME) move files
18.sudo mv oldname newname    ---    rename file
19.sudo tar -xvf tarfilename   ----- To extract file like zip file 
    ifconfig :- local ip addres
	
	tree = it will least all the files
	ifconfig = to know server details like ip address

     How to add NEW USER  (Linux-04)
20.sudo adduser name           ---- To add user, it will ask pasword it will unvisable
     A-Go to etc/ssh/sudo vi sshd-config
     B-change pasword athantication -NO to YES
     C-save file then exit
     D-sudo service ssh restart (**Don't forget to do**) (permission-01)
   now user cant creat files in opt and other directorys to creat files need to chanege sudo settings 
    A-sudo visudo
    B-add username ALL=(ALL:ALL)ALL comment in user privilage specification list (permission-02)
    C-CTR x --- SHIFT-Y ----ENTER
	* To find list of users in server  (Linux-05)
	   cat /etc/passwd   
    * To switch one user to another user 
	  su username
	*To reset user password 
	  sudo passwd username
	  id username :- to check user details
	* To delete user 
	   userdel -r username
	* how to create group 
	   $groupadd groupname
       $cd etc/group :- to check groups
	   $groupdel groupname 
	   
	* how to add user in group 
      usermod -a -G groupname username 

    * how to add user to sudo group (admin access)	
      sudo usermod -aG sudo username 	
       	   
	*some times sudo will not work due to sudours file corroption then fallow bellow link
	  https://aws.amazon.com/premiumsupport/knowledge-center/ec2-sudoers-syntax-errors-sudo/
	  
	 *To replace any word in text file 
	  :%s/oldword/newword/g 
	  
  How to switch from one server to another server internaly 
       *ssh username@ip-address
	   *exit :- To exit from that server 
	
  How To copy data from one server to another 
         sudo scp source username@IPaddres:destination-path   :- to copy file 
		 sudo scp -r source username@IPaddres:destination-path   :- to copy directory
 	ex:- sudo scp opt/file-1 harish@34.239.107.139:/opt/harish/
	     *in destination server we dont have permission so we need to provide permission for directory by using bellow command (permission-03)
		  To provide full permission to directory 
		  sudo chmod 777 directoryname
		  
	 *passwordgenrator.net :- website used to creat passwords  
  How to change Hostname 
    A- go to etc directory --- sudo vi hostname  (open hostname file)
    B- change IP addres to name 
    c- go to AWS SERVER -INSTANT STATE -REBOOT
       OR sudo reboot  :- to restart server from linux CLI
	   
21.top  (to know CPU memory)
   downloading of folder strutcher
     1-Build process
    *ps -ef to know process which are runing in the backend 
	*ps -ef |grep 8080  :- to check wether port is runing r not 
	*search and replace command 
	 enter into the file then :- ::s/presend word/new word/g
	*kill -9 ppid :- -9 is forcefully & ppid parent process id 
	
22.sudo apt-get update
22.sudo apt-get install default-jdk  or sudo apt-get install openjdk-8-jdk
    java -version
23.sudo apt-get install maven
     mvn -version
   sudo apt-get remove maven
   sudo apt-get purge maven
24. cat /etc/ubuntu os-relese ---->to find ubuntu version
25.sudo update-alternative --confeg java---->to switch java version
26.sudo git clone URL  ----->To upload data into server from github
27.mvn archetype:generate  ----> To download maven folder strucher
28.sudo mvn clean install ----> it shoud be in pom.xml file (Project Object Model)
29. cat etc/*-release ----> find details of server 

topics 

* usermanagement
* Disk management
* file permission
* operating system analsis
* logs management and package management



   1.install java
   2.install maven 
   3.install git 
   4.creat directory in opt 
   5.clone data from github
   6.sudo mvn clean install, where pom.xml file is present 
   7. 
   
   ******************* MAVEN ***********************
   
   
   *Maven is build tools and project management tools
   *by using maven we can build number of projects into output like jar, war files 
   *we can esayly add jar and other dependancy file into the project by using maven
   *by using maven we can esayly integrate over project with source contral system like git 
   *maven provides project information, log decument, dependancy list and unit test reports etc.
   
   maven build life cycle
   1.default :- it is main life cycle, it is responceble for project deployment
   2.clean   :- to clean the project and remove all files generated during the last build
   3.site    :- to create projects site documentation
   
   maven goals  
   1. validate  :- check all the necessary information is avilable for build
   2. compile   :- compile the source code 
   3. test      :- test the compiled source code and run unit tests
   4. package   :- package the compiled source code into the distributable formate (war & jar)
   5. install   :- install the package into the local repository
   6. deploy    :- copy the package to the central repository
   
   
   mvn test -DskipTests
   
   how to set enveronment variables 
   
   *install maven in opt
   *create maven.sh in etc/profile.d place bellow script and give chmod 777 permission to that file 
      # Apache Maven Environment Variables
      # MAVEN_HOME for Maven 1 - M2_HOME for Maven 2
        export M2_HOME=/opt/maven
        export PATH=${M2_HOME}/bin:${PATH}
   * source maven.sh :- load file in server leveal		
   
note:- apt-get will only work on ubuntu, Debian, mint, kali linux servers
       apt-get will not work on centos, RHEL, Fedora, mach, Arch servers
	   
	   to find wether apt is instlled or not CMD locate apt-get 
	   
	   if not installed, intsall dben package and dpkg
   
   
   
Q) where will be the local repository in system and server 
  localdisk--user--.m2--repository
  ls -la
  .m2 
  
  how to connect to AWS server using putty
  
Q) what are the default mandeatery options in pom.xml file
    project, moduel version, group_id, artifact_id, version.
  
  to connect thoru putty u need ppk.file
  pem.file can be converded to ppk.file by puty.gen shoftware 
  

   ****Tomcat***
29.sudo wget tomcatlink
30.sudo tar -xvf taomcatname---->To untar file
        tar -tvf filename ----> to view files inside tar file without extract
		tar -cvf filename.tar ----> to create tar file 
31.go to bin and do ls ---> sh startup.sh (startup.sh) --->to start tomcat
  *scurity group settings need to do in server to run tomcat application --->security-->inbond ---->add rule
  *For tomcat we need to change port number in server by server.xml file 8080--->5050
   once you change the port number its very importent to shutdown and startup.sh the tomcat

   error ---> 403 (network acces error )
   make a changes in context.xml file ---> replace by 127.000000 ---> .* (path:- /opt/Tomcat-08/webapps/manager/META-INF)
   error----->401-acces_denied & 401-unathorised (manger app)
   add script in tomcat-users.xml file  (path:- /opt/Tomcat-08/conf)
   
   <tomcat-users>
   <role rolename="manager-gui"/>
   <user username="admin" password="Admin" roles="manager-gui, manager-script, manager-admin, manager-status"/>
   </tomcat-users>
   
   install any war file in tomcat webaaps directory (for testing perpose)
   sudo wget https://get.jenkins.io/war-stable/2.289.3/jenkins.war
   
   *how to serch file name 
     find / -name filename
	 find / -iname filename :- i to ignore case 
	 find /opt -iname *ilenam*  
	 find / -type f -name filename ( f for files & d for directores )
     find . -maxdepth 1 -type f :- To list only files 
     find / -empty
 
   1-one server  to other server
ssh user name @destinaton    
	 
2-401 and 403 error
3-how do you login into without keypeir
4-what is ci cd explain
5-what is deference between pull and fetch
6-what are the defferent tools your using
   
   
   Q/A 
   1- how to move data from two folders to one repository 
   2- how to push tags to central
      git tag tagname 
      git push origin tagname 
	  
	  In case you want to tag a specific commit
	  git tag -a v1.0 commit_id -m "Your message here"
	  
	  
	  https://www.youtube.com/playlist?list=PLV5mSQ9gzMc5C1RH6-9Vo0kaJy_wHNKQw   :- jira tutorials

